
// Triggers goal when 1 monster has been killed.
class GoalServiceExample : Service
{
	override int GetInt(String req, String goalType, int curState, double curPerc, Object plrObj)
	{
		// Only process if neutral.
		if(curState == 0) 
		{
			return level.killed_monsters > 0;
		}
		
		return curState; // Neutral state
	}
	
	override double GetDouble(String req, String goalType, int curState, double curPerc, Object plrObj)
	{		
		// Used for multi-level goals.
		return curPerc;
	}
	
	// Update goal description
	override string GetString(String curDesc, String goalType, int curState, double curPerc, Object plrObj)
	{
		return curDesc;
	}
}

class GoalInfoGetter : Service 
{
	override string GetString(string goalType, string unusedStr, int unusedInt, double unusedDbl, Object plrObj)
	{
		let goalData = I_GoalzData(Actor(plrObj).FindInventory("I_GoalzData"));
		if(!goalData || goalData.goals.Size() <= 0) return "";
		
		if(goalType != "*")
		{
			GoalInfo goal = goalData.findGoalByType(goalType);
			if(!goal) return "";
		
			return goalData.GetGoalDataString(goal);
		}
		else // Found wildcard "*", get all goal data.
		{
			string outp = goalData.GetGoalDataString(goalData.goals[0]);
			for(int i = 1; i < goalData.goals.Size(); i++)
				outp = String.Format("%s~:~%s", outp, goalData.GetGoalDataString(goalData.goals[i]));
				
			return outp;
		}
	}
}